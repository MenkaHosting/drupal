version: "3"

services:
  mariadb:
    image: wodby/mariadb:$MARIADB_TAG
    container_name: "${PROJECT_NAME}_mariadb"
    stop_grace_period: 30s
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./mariadb:/var/lib/mysql

  php:
    image: wodby/drupal-php:$PHP_TAG
    container_name: "${PROJECT_NAME}_php"
    restart: always
    environment:
      PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S mailhog:1025
#      PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S opensmtpd:25
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_DATABASE}
      DB_DRIVER: ${DB_DRIVER}
      PHP_FPM_USER: wodby
      PHP_FPM_GROUP: wodby
      COLUMNS: 80 # Set 80 columns for docker exec -it.
    volumes:
      - ./app:/var/www/html
      - ./files:/mnt/files

  crond:
    image: wodby/drupal-php:$PHP_TAG
    container_name: "${PROJECT_NAME}_crond"
    restart: always
    command: sudo -E LD_PRELOAD=/usr/lib/preloadable_libiconv.so crond -f -d 0
    volumes:
      - ./app:/var/www/html
      - ./files:/mnt/files
      - ./crontab:/etc/crontabs/www-data

  sshd:
    image: wodby/drupal-php:$PHP_TAG
    container_name: "${PROJECT_NAME}_sshd"
    restart: always
    command: sudo /usr/sbin/sshd -De
    ports:
      - '2222:22'
#    environment:
#      SSHD_GATEWAY_PORTS: clientspecified
    volumes:
      - ./app:/var/www/html
      - ./files:/mnt/files
      - ./authorized_keys:/home/wodby/.ssh/authorized_keys
    labels:
      - 'traefik.backend=${PROJECT_NAME}_sshd'
      - 'traefik.port=2222'
      - 'traefik.frontend.rule=Host:ssh.${PROJECT_BASE_URL}'

  nginx:
    image: wodby/nginx:$NGINX_TAG
    container_name: "${PROJECT_NAME}_nginx"
    restart: always
    depends_on:
      - php
    environment:
      NGINX_BACKEND_HOST: php
      NGINX_SERVER_ROOT: $WEB_ROOT
      NGINX_SET_REAL_IP_FROM: 172.17.0.0/16
      NGINX_VHOST_PRESET: $NGINX_VHOST_PRESET
#      NGINX_DRUPAL_FILE_PROXY_URL: http://example.com
    volumes:
      - ./app:/var/www/html
      - ./files:/mnt/files
    labels:
      - 'traefik.backend=${PROJECT_NAME}_nginx'
      - 'traefik.port=80'
      - 'traefik.frontend.rule=Host:${PROJECT_BASE_URL}'

  mailhog:
    image: mailhog/mailhog
    container_name: "${PROJECT_NAME}_mailhog"
    restart: always
    labels:
      - 'traefik.backend=${PROJECT_NAME}_mailhog'
      - 'traefik.port=8025'
      - 'traefik.frontend.rule=Host:mailhog.${PROJECT_BASE_URL}'

#  apache:
#    image: wodby/apache:$APACHE_TAG
#    container_name: "${PROJECT_NAME}_apache"
#    restart: always
#    depends_on:
#      - php
#    environment:
#      APACHE_BACKEND_HOST: php
#      APACHE_VHOST_PRESET: php
#      APACHE_DOCUMENT_ROOT: $WEB_ROOT
#    volumes:
#      - ./app:/var/www/html
#    labels:
#      - 'traefik.backend=${PROJECT_NAME}_apache'
#      - 'traefik.port=80'
#      - 'traefik.frontend.rule=Host:${PROJECT_BASE_URL}'

#  varnish:
#    image: wodby/varnish:$VARNISH_TAG
#    container_name: "${PROJECT_NAME}_varnish"
#    restart: always
#    depends_on:
#      - nginx
#    environment:
#      VARNISH_SECRET: ${VARNISH_SECRET}
#      VARNISH_PURGE_KEY: ${VARNISH_PURGE_KEY}
#      VARNISH_PURGE_EXTERNAL_REQUEST_HEADER: X-Real-IP
#      VARNISH_BACKEND_HOST: nginx
#      VARNISH_CONFIG_PRESET: drupal
#      VARNISHD_PARAM_HTTP_RESP_HDR_LEN: 16k
#    labels:
#      - 'traefik.backend=${PROJECT_NAME}_varnish'
#      - 'traefik.port=6081'
#      - 'traefik.frontend.rule=Host:varnish.${PROJECT_BASE_URL}'

  redis:
    container_name: "${PROJECT_NAME}_redis"
    restart: always
    image: wodby/redis:$REDIS_TAG
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - './redis:/data'

  pma:
    image: phpmyadmin/phpmyadmin
    container_name: "${PROJECT_NAME}_pma"
    restart: always
    environment:
      PMA_HOST: ${DB_HOST}
      PHP_UPLOAD_MAX_FILESIZE: 1G
      PHP_MAX_INPUT_VARS: 1G
    labels:
      - 'traefik.backend=${PROJECT_NAME}_pma'
      - 'traefik.port=80'
      - 'traefik.frontend.rule=Host:pma.${PROJECT_BASE_URL}'

#  solr:
#    image: wodby/solr:$SOLR_TAG
#    container_name: "${PROJECT_NAME}_solr"
#    restart: always
#    environment:
#      SOLR_DEFAULT_CONFIG_SET: $SOLR_CONFIG_SET
#      SOLR_HEAP: 1024m
#    volumes:
#      - './solr:/opt/solr/server/solr'
#    labels:
#      - 'traefik.backend=${PROJECT_NAME}_solr'
#      - 'traefik.port=8983'
#      - 'traefik.frontend.rule=Host:solr.${PROJECT_BASE_URL}'

#  memcached:
#    container_name: "${PROJECT_NAME}_memcached"
#    restart: always
#    image: wodby/memcached:$MEMCACHED_TAG

  rsyslog:
    image: wodby/rsyslog:$RSYSLOG_TAG
    container_name: "${PROJECT_NAME}_rsyslog"
    restart: always

  athenapdf:
    image: arachnysdocker/athenapdf-service:$ATHENAPDF_TAG
    container_name: "${PROJECT_NAME}_athenapdf"
    restart: always
    environment:
      WEAVER_AUTH_KEY: ${ATHENAPDF_PASSWORD}
      WEAVER_ATHENA_CMD: "athenapdf -S"
      WEAVER_MAX_WORKERS: 10
      WEAVER_MAX_CONVERSION_QUEUE: 50
      WEAVER_WORKER_TIMEOUT: 90
      WEAVER_CONVERSION_FALLBACK: "false"

#  elasticsearch:
#    image: wodby/elasticsearch:$ELASTICSEARCH_TAG
#    container_name: "${PROJECT_NAME}_elasticsearch"
#    restart: always
#    environment:
#      ES_JAVA_OPTS: "-Xms500m -Xmx500m"
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1

#  kibana:
#    image: wodby/kibana:$KIBANA_TAG
#    container_name: "${PROJECT_NAME}_kibana"
#    restart: always
#    depends_on:
#      - elasticsearch
#    labels:
#      - 'traefik.backend=${PROJECT_NAME}_kibana'
#      - 'traefik.port=5601'
#      - 'traefik.frontend.rule=Host:kibana.${PROJECT_BASE_URL}'

#  opensmtpd:
#    container_name: "${PROJECT_NAME}_opensmtpd"
#    restart: always
#    image: wodby/opensmtpd:$OPENSMTPD_TAG
#    environment:
#      RELAY_HOST: $OPENSMTPD_RELAY_HOST
#      RELAY_USER: $OPENSMTPD_RELAY_USER
#      RELAY_PASSWORD: $OPENSMTPD_RELAY_PASSWORD
#    volumes:
#      - './smtpd:/var/spool/smtpd'

  traefik:
    image: traefik:v1.7.16-alpine
    container_name: "${PROJECT_NAME}_traefik"
    restart: always
    command: -c /dev/null --web --docker --logLevel=INFO
    ports:
      - '80:80'
      - "443:443"
#      - '8080:8080' # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  portainer:
    image: portainer/portainer
    container_name: "${PROJECT_NAME}_portainer"
    command: --no-auth -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - 'traefik.backend=${PROJECT_NAME}_portainer'
      - 'traefik.port=9000'
      - 'traefik.frontend.rule=Host:portainer.${PROJECT_BASE_URL}'
