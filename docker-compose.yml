version: "3"

services:
  mariadb:
    image: wodby/mariadb:$MARIADB_TAG
    container_name: "${PROJECT_NAME}_mariadb"
    stop_grace_period: 30s
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./mariadb:/var/lib/mysql

  php:
    image: wodby/drupal-php:$PHP_TAG
    container_name: "${PROJECT_NAME}_php"
    restart: always
    environment:
      PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S mailhog:1025
#      PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S opensmtpd:25
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_DATABASE}
      DB_DRIVER: ${DB_DRIVER}
      PHP_FPM_USER: wodby
      PHP_FPM_GROUP: wodby
      COLUMNS: 80 # Set 80 columns for docker exec -it.
    volumes:
      - ./app:/var/www/html
      - ./files:/mnt/files

  crond:
    image: wodby/drupal-php:$PHP_TAG
    container_name: "${PROJECT_NAME}_crond"
    restart: always
    command: sudo -E LD_PRELOAD=/usr/lib/preloadable_libiconv.so crond -f -d 0
    volumes:
      - ./app:/var/www/html
      - ./files:/mnt/files
      - ./crontab:/etc/crontabs/www-data

  sshd:
    image: wodby/drupal-php:$PHP_TAG
    container_name: "${PROJECT_NAME}_sshd"
    restart: always
    command: sudo /usr/sbin/sshd -De
    environment:
      SSHD_GATEWAY_PORTS: clientspecified
    volumes:
      - ./app:/var/www/html
      - ./files:/mnt/files
      - ./authorized_keys:/home/wodby/.ssh/authorized_keys
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.${PROJECT_NAME}_sshd.entrypoints=ssh"
      - "traefik.tcp.routers.${PROJECT_NAME}_sshd.rule=HostSNI(`*`)"
      - "traefik.tcp.services.${PROJECT_NAME}_sshd.loadbalancer.server.port=22"

  nginx:
    image: wodby/nginx:$NGINX_TAG
    container_name: "${PROJECT_NAME}_nginx"
    restart: always
    depends_on:
      - php
    environment:
      NGINX_BACKEND_HOST: php
      NGINX_SERVER_ROOT: $WEB_ROOT
      NGINX_SET_REAL_IP_FROM: 172.17.0.0/16
      NGINX_VHOST_PRESET: $NGINX_VHOST_PRESET
#      NGINX_DRUPAL_FILE_PROXY_URL: http://example.com
    volumes:
      - ./app:/var/www/html
      - ./files:/mnt/files
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${PROJECT_NAME}_nginx.rule=Host(`${PROJECT_BASE_URL}`)"
#      - "traefik.http.routers.${PROJECT_NAME}_nginx.entrypoints=web"
      # enable https
      - "traefik.http.routers.${PROJECT_NAME}_nginx.tls.certresolver=leresolver"
      - "traefik.http.routers.${PROJECT_NAME}_nginx.entrypoints=websecure"
      # global redirect to https
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      # middleware redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

  mailhog:
    image: mailhog/mailhog
    container_name: "${PROJECT_NAME}_mailhog"
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${PROJECT_NAME}_mailhog.entrypoints=web"
      - "traefik.http.services.${PROJECT_NAME}_mailhog.loadbalancer.server.port=8025"
      - "traefik.http.routers.${PROJECT_NAME}_mailhog.rule=Host(`mailhog.${PROJECT_BASE_URL}`)"

  redis:
    container_name: "${PROJECT_NAME}_redis"
    restart: always
    image: wodby/redis:$REDIS_TAG
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - './redis:/data'

  pma:
    image: phpmyadmin/phpmyadmin
    container_name: "${PROJECT_NAME}_pma"
    restart: always
    environment:
      PMA_HOST: ${DB_HOST}
      PHP_UPLOAD_MAX_FILESIZE: 1G
      PHP_MAX_INPUT_VARS: 1G
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${PROJECT_NAME}_pma.entrypoints=web"
      - "traefik.http.routers.${PROJECT_NAME}_pma.rule=Host(`pma.${PROJECT_BASE_URL}`)"

  rsyslog:
    image: wodby/rsyslog:$RSYSLOG_TAG
    container_name: "${PROJECT_NAME}_rsyslog"
    restart: always

  athenapdf:
    image: arachnysdocker/athenapdf-service:$ATHENAPDF_TAG
    container_name: "${PROJECT_NAME}_athenapdf"
    restart: always
    environment:
      WEAVER_AUTH_KEY: ${ATHENAPDF_PASSWORD}
      WEAVER_ATHENA_CMD: "athenapdf -S"
      WEAVER_MAX_WORKERS: 10
      WEAVER_MAX_CONVERSION_QUEUE: 50
      WEAVER_WORKER_TIMEOUT: 90
      WEAVER_CONVERSION_FALLBACK: "false"

#  elasticsearch:
#    image: wodby/elasticsearch:$ELASTICSEARCH_TAG
#    container_name: "${PROJECT_NAME}_elasticsearch"
#    restart: always
#    environment:
#      ES_JAVA_OPTS: "-Xms500m -Xmx500m"
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1

#  kibana:
#    image: wodby/kibana:$KIBANA_TAG
#    container_name: "${PROJECT_NAME}_kibana"
#    restart: always
#    depends_on:
#      - elasticsearch
#    labels:
#      - 'traefik.port=5601'
#      - 'traefik.frontend.rule=Host:kibana.${PROJECT_BASE_URL}'

#  opensmtpd:
#    container_name: "${PROJECT_NAME}_opensmtpd"
#    restart: always
#    image: wodby/opensmtpd:$OPENSMTPD_TAG
#    environment:
#      RELAY_HOST: $OPENSMTPD_RELAY_HOST
#      RELAY_USER: $OPENSMTPD_RELAY_USER
#      RELAY_PASSWORD: $OPENSMTPD_RELAY_PASSWORD
#    volumes:
#      - './smtpd:/var/spool/smtpd'

  traefik:
    image: traefik:v2.0.0
    container_name: "${PROJECT_NAME}_traefik"
    restart: always
    command:
      #- "--log.level=DEBUG"
      #- "--api.insecure=true" # Traefik will listen on port 8080 by default for API request.
      - "--providers.docker=true" # Enabling docker provider
      #- "--providers.docker.exposedbydefault=false" # Do not expose containers unless explicitly told so
      - "--entrypoints.web.address=:80" # Traefik will listen to incoming request on the port 80 (HTTP)
      - "--entrypoints.ssh.address=:22" # Traefik will listen to incoming request on the port 22 (SSH)
      - "--entrypoints.websecure.address=:443" # Traefik will listen to incoming request on the port 443 (HTTP)
      - "--certificatesresolvers.leresolver.acme.email=robertmenetray@gmail.com"
      - "--certificatesresolvers.leresolver.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.leresolver.acme.tlschallenge=true"
    ports:
      - "80:80"
      - "443:443"
      - "2222:22"
      #- "8080:8080" # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt

  portainer:
    image: portainer/portainer
    container_name: "${PROJECT_NAME}_portainer"
    command: --no-auth -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${PROJECT_NAME}_portainer.entrypoints=web"
      - "traefik.http.routers.${PROJECT_NAME}_portainer.rule=Host(`portainer.${PROJECT_BASE_URL}`)"
      - "traefik.http.services.${PROJECT_NAME}_portainer.loadbalancer.server.port=9000"
